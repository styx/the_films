angular.module('Films', [
  'ngResource'
  'ngMaterial'
  'ngMessages'
  'ui.router'
  'ng-rails-csrf'
  'templates'
  'rails'
  'ncy-angular-breadcrumb'
  'angularUtils.directives.dirPagination'
  'Films.services'
  'Films.directives'
  'Films.controllers'
])

.config [
  '$urlRouterProvider'
  '$mdThemingProvider'
  '$breadcrumbProvider'
  '$mdIconProvider'
  '$provide'
  ($urlRouterProvider, $mdThemingProvider, $breadcrumbProvider, $mdIconProvider, $provide) ->

    $urlRouterProvider.otherwise('/films')

    $mdThemingProvider.theme('default')
      .primaryPalette('indigo')
      .accentPalette('red')
      .warnPalette('red')

    $breadcrumbProvider.setOptions
      templateUrl: 'breadcrumbs/template.html'

    $mdIconProvider
      .defaultIconSet("<%= asset_path('svgdefs.svg') %>")

    $provide.decorator '$state', ['$delegate', '$stateParams', ($delegate, $stateParams) ->

      $delegate.forceReload = ->
        $delegate.go $delegate.current, $stateParams,
          reload: true
          inherit: false
          notify: true

      $delegate
    ]
]

.run [
  '$rootScope'
  '$state'
  ($rootScope, $state) ->
    $rootScope.previousState
    $rootScope.$on '$stateChangeSuccess', (ev, to, toParams, from, fromParams) ->
      $rootScope.previousState = { name: from.name, params: fromParams }

    $rootScope.goBack = (defaultState, options) ->
      $state.go($rootScope.previousState.name || defaultState, $rootScope.previousState.params, options)

]

.controller 'ApplicationController', [
  '$mdSidenav'
  ($mdSidenav) ->
    this.toggleLeftMenu = ->
      $mdSidenav('left').toggle()

    this.menu = [
      { name: 'Films', state: 'films.list' }
      { name: 'Genres', state: 'genres.list' }
      { name: 'Kinds', state: 'kinds.list' }
    ]

    this.isMenuSelected = (item) ->
      true

]
